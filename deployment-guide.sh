#!/bin/bash

# =============================================================================
# ุฏููู ูุดุฑ ุชุทุจูู ุฏุนุงุก ุฃุฐูุงุฑู - ุณูุฑูุจุช ุงูุชุซุจูุช ุงูุชููุงุฆู
# Dua Azkari Deployment Script
# =============================================================================

set -e  # ุฅููุงู ุงูุณูุฑูุจุช ุนูุฏ ุญุฏูุซ ุฎุทุฃ

# ุงูุฃููุงู ููุนุฑุถ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# ุฏุงูุฉ ูุทุจุงุนุฉ ุฑุณุงุฆู ููููุฉ
print_message() {
    echo -e "${GREEN}[โ]${NC} $1"
}

print_error() {
    echo -e "${RED}[โ]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[!]${NC} $1"
}

print_info() {
    echo -e "${BLUE}[โน]${NC} $1"
}

print_header() {
    echo ""
    echo -e "${BLUE}โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ${NC}"
    echo -e "${BLUE}  $1${NC}"
    echo -e "${BLUE}โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ${NC}"
    echo ""
}

# ุงูุชุญูู ูู ุตูุงุญูุงุช ุงููุณุชุฎุฏู
check_sudo() {
    if [ "$EUID" -ne 0 ]; then 
        print_warning "ูุฐุง ุงูุณูุฑูุจุช ูุญุชุงุฌ ุตูุงุญูุงุช sudo ูุจุนุถ ุงูุนูููุงุช"
        print_info "ุณูุชู ุทูุจ ูููุฉ ุงููุฑูุฑ ุนูุฏ ุงูุญุงุฌุฉ"
    fi
}

# ุงูุชุญูู ูู Node.js
check_nodejs() {
    print_header "ุงูุชุญูู ูู Node.js"
    
    if command -v node &> /dev/null; then
        NODE_VERSION=$(node -v)
        print_message "Node.js ูุซุจุช: $NODE_VERSION"
        
        # ุงูุชุญูู ูู ุงูุฅุตุฏุงุฑ
        REQUIRED_VERSION="18"
        CURRENT_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
        
        if [ "$CURRENT_VERSION" -lt "$REQUIRED_VERSION" ]; then
            print_error "Node.js version $REQUIRED_VERSION ุฃู ุฃุญุฏุซ ูุทููุจ"
            print_info "ููููู ุชุญุฏูุซ Node.js ุจุงุณุชุฎุฏุงู:"
            echo "    curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -"
            echo "    sudo apt install -y nodejs"
            exit 1
        fi
    else
        print_error "Node.js ุบูุฑ ูุซุจุช"
        print_info "ูุฑุฌู ุชุซุจูุช Node.js ุฃููุงู:"
        echo "    curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -"
        echo "    sudo apt install -y nodejs"
        exit 1
    fi
}

# ุงูุชุญูู ูู PostgreSQL
check_postgresql() {
    print_header "ุงูุชุญูู ูู PostgreSQL"
    
    if command -v psql &> /dev/null; then
        POSTGRES_VERSION=$(psql --version)
        print_message "PostgreSQL ูุซุจุช: $POSTGRES_VERSION"
    else
        print_error "PostgreSQL ุบูุฑ ูุซุจุช"
        print_info "ูุฑุฌู ุชุซุจูุช PostgreSQL ุฃููุงู:"
        echo "    sudo apt install -y postgresql postgresql-contrib"
        exit 1
    fi
}

# ุฅุนุฏุงุฏ ููู ุงูุจูุฆุฉ
setup_env() {
    print_header "ุฅุนุฏุงุฏ ููู ุงูุจูุฆุฉ"
    
    if [ ! -f ".env.production" ]; then
        if [ -f "env.production.example" ]; then
            print_info "ูุณุฎ ููู ุงูุจูุฆุฉ ูู ุงููุซุงู..."
            cp env.production.example .env.production
            print_warning "ูุฑุฌู ุชุนุฏูู ููู .env.production ุจุงูููู ุงูุตุญูุญุฉ"
            print_info "ุงุถุบุท Enter ูููุชุงุจุนุฉ ุจุนุฏ ุงูุชุนุฏูู..."
            read
        else
            print_error "ููู env.production.example ุบูุฑ ููุฌูุฏ"
            exit 1
        fi
    else
        print_message "ููู .env.production ููุฌูุฏ ุจุงููุนู"
    fi
}

# ุชุซุจูุช ุงูุญุฒู
install_dependencies() {
    print_header "ุชุซุจูุช ุงูุญุฒู"
    
    if [ -f "package.json" ]; then
        print_info "ุชุซุจูุช npm packages..."
        npm ci --production
        print_message "ุชู ุชุซุจูุช ุงูุญุฒู ุจูุฌุงุญ"
        
        # ุชุซุจูุช Prisma Client
        print_info "ุชุซุจูุช Prisma Client..."
        npm install @prisma/client
        print_message "ุชู ุชุซุจูุช Prisma Client ุจูุฌุงุญ"
    else
        print_error "ููู package.json ุบูุฑ ููุฌูุฏ"
        exit 1
    fi
}

# ุชุฌููุฒ ูุงุนุฏุฉ ุงูุจูุงูุงุช
setup_database() {
    print_header "ุชุฌููุฒ ูุงุนุฏุฉ ุงูุจูุงูุงุช"
    
    print_info "ุชุดุบูู Migrations..."
    npx prisma migrate deploy
    print_message "ุชู ุชุดุบูู Migrations ุจูุฌุงุญ"
    
    print_info "ุฅูุดุงุก Prisma Client..."
    npx prisma generate
    print_message "ุชู ุฅูุดุงุก Prisma Client ุจูุฌุงุญ"
    
    # ุณุคุงู ุนู ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ
    read -p "ูู ุชุฑูุฏ ุฅุถุงูุฉ ุจูุงูุงุช ุชุฌุฑูุจูุฉุ (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        print_info "ุฅุถุงูุฉ ุจูุงูุงุช ุชุฌุฑูุจูุฉ..."
        npm run db:seed
        print_message "ุชู ุฅุถุงูุฉ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ ุจูุฌุงุญ"
    fi
}

# ุจูุงุก ุงูุชุทุจูู
build_application() {
    print_header "ุจูุงุก ุงูุชุทุจูู"
    
    print_info "ุจูุงุก ุงูุชุทุจูู ููุฅูุชุงุฌ..."
    
    # ุงุณุชุฎุฏุงู ููู ุงูุฅุนุฏุงุฏุงุช ุงูุฎุงุต ุจุงูุฅูุชุงุฌ ุฅุฐุง ูุงู ููุฌูุฏุงู
    if [ -f "next.config.production.ts" ]; then
        print_info "ุงุณุชุฎุฏุงู next.config.production.ts..."
        cp next.config.ts next.config.backup.ts 2>/dev/null || true
        cp next.config.production.ts next.config.ts
    fi
    
    npm run build
    
    # ุงุณุชุนุงุฏุฉ ุงูููู ุงูุฃุตูู
    if [ -f "next.config.backup.ts" ]; then
        mv next.config.backup.ts next.config.ts
    fi
    
    print_message "ุชู ุจูุงุก ุงูุชุทุจูู ุจูุฌุงุญ"
}

# ุฅุนุฏุงุฏ PM2
setup_pm2() {
    print_header "ุฅุนุฏุงุฏ PM2"
    
    if ! command -v pm2 &> /dev/null; then
        print_info "ุชุซุจูุช PM2..."
        sudo npm install -g pm2
        print_message "ุชู ุชุซุจูุช PM2 ุจูุฌุงุญ"
    else
        print_message "PM2 ูุซุจุช ุจุงููุนู"
    fi
    
    # ุฅููุงู ุงูุชุทุจูู ุฅุฐุง ูุงู ูุนูู
    pm2 delete dua-azkari 2>/dev/null || true
    
    print_info "ุชุดุบูู ุงูุชุทุจูู ุจุงุณุชุฎุฏุงู PM2..."
    pm2 start npm --name "dua-azkari" -- start
    
    print_info "ุญูุธ ูุงุฆูุฉ ุงูุนูููุงุช..."
    pm2 save
    
    print_info "ุฅุนุฏุงุฏ PM2 ููุจุฏุก ุงูุชููุงุฆู..."
    pm2 startup
    
    print_message "ุชู ุฅุนุฏุงุฏ PM2 ุจูุฌุงุญ"
}

# ุฅุนุฏุงุฏ Nginx (ุงุฎุชูุงุฑู)
setup_nginx() {
    print_header "ุฅุนุฏุงุฏ Nginx (ุงุฎุชูุงุฑู)"
    
    read -p "ูู ุชุฑูุฏ ุฅุนุฏุงุฏ Nginx ูู Reverse Proxyุ (y/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        print_info "ุชุฎุทู ุฅุนุฏุงุฏ Nginx"
        return
    fi
    
    if ! command -v nginx &> /dev/null; then
        print_info "ุชุซุจูุช Nginx..."
        sudo apt install -y nginx
        print_message "ุชู ุชุซุจูุช Nginx ุจูุฌุงุญ"
    else
        print_message "Nginx ูุซุจุช ุจุงููุนู"
    fi
    
    print_info "ูุฑุฌู ุฅูุดุงุก ููู ุงูุฅุนุฏุงุฏุงุช ูุฏููุงู ูู:"
    echo "    /etc/nginx/sites-available/dua-azkari"
    print_info "ุฑุงุฌุน ููู PRODUCTION_README.md ููุชูุงุตูู"
}

# ุนุฑุถ ูุนูููุงุช ุงููุดุฑ
display_info() {
    print_header "ูุนูููุงุช ุงููุดุฑ"
    
    echo ""
    print_message "ุชู ูุดุฑ ุงูุชุทุจูู ุจูุฌุงุญ! ๐"
    echo ""
    print_info "ูุนูููุงุช ูููุฉ:"
    echo "  โข ุงูุชุทุจูู ูุนูู ุนูู ุงููููุฐ: 3001"
    echo "  โข ููููู ุนุฑุถ ุงูุณุฌูุงุช ุจุงุณุชุฎุฏุงู: pm2 logs dua-azkari"
    echo "  โข ููููู ุฅููุงู ุงูุชุทุจูู ุจุงุณุชุฎุฏุงู: pm2 stop dua-azkari"
    echo "  โข ููููู ุฅุนุงุฏุฉ ุชุดุบูู ุงูุชุทุจูู ุจุงุณุชุฎุฏุงู: pm2 restart dua-azkari"
    echo ""
    print_warning "ูุง ุชูุณู:"
    echo "  1. ุชุนุฏูู ููู .env.production ุจุงูููู ุงูุตุญูุญุฉ"
    echo "  2. ุฅุนุฏุงุฏ Nginx ูSSL ููุฅูุชุงุฌ"
    echo "  3. ุฅุนุฏุงุฏ ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู"
    echo "  4. ูุฑุงุฌุนุฉ PRODUCTION_README.md ูููุฒูุฏ ูู ุงูุชูุงุตูู"
    echo ""
}

# ุฏุงูุฉ ุงูุชูุธูู ูู ุญุงูุฉ ุงููุดู
cleanup() {
    print_error "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุชุซุจูุช!"
    print_info "ูุฑุฌู ูุฑุงุฌุนุฉ ุงูุฃุฎุทุงุก ุฃุนูุงู"
    exit 1
}

# ุชูุนูู ุฏุงูุฉ ุงูุชูุธูู ุนูุฏ ุงูุฎุทุฃ
trap cleanup ERR

# =============================================================================
# ุงูุจุฑูุงูุฌ ุงูุฑุฆูุณู
# =============================================================================

main() {
    clear
    print_header "๐ ุชุซุจูุช ุชุทุจูู ุฏุนุงุก ุฃุฐูุงุฑู - ูุณุฎุฉ ุงูุฅูุชุงุฌ"
    
    check_sudo
    check_nodejs
    check_postgresql
    setup_env
    install_dependencies
    setup_database
    build_application
    setup_pm2
    setup_nginx
    display_info
    
    print_message "ุงูุชูู ุงูุชุซุจูุช! โ"
}

# ุชุดุบูู ุงูุจุฑูุงูุฌ ุงูุฑุฆูุณู
main

